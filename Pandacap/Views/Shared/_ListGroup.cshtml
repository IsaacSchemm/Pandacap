@using Pandacap.Data
@using Pandacap.HighLevel
@using Pandacap.Models
@model IEnumerable<IPost>

@if (!string.IsNullOrEmpty(Model.First().Username))
{
    <h1>
        @foreach (string icon in Model.Select(p => p.Usericon).Take(1))
        {
            <img height="50" src="@icon" alt="" />
        }
        <a href="@Model.First().ProfileUrl" target="_blank" style="display: inline-block; vertical-align: top">
            <strong>
                @Model.First().Username
            </strong>
        </a>
    </h1>
}

@foreach (var badge in Model.SelectMany(p => p.GetBadges()).Distinct())
{
    <span class="badge mb-3" style="background-color: @badge.Background; color: @badge.Color">
        @badge.Text
    </span>
}

@{
    var withThumbnails = Model.Where(item => item.Thumbnails.Any());
    var withoutThumbnails = Model.Except(withThumbnails);
}

<div class="container-fluid">
    <div class="row">
        @foreach (var item in withThumbnails)
        {
            string url = User.Identity?.IsAuthenticated == true
                ? item.InternalUrl
                : item.ExternalUrl;

            var thumbnail = item.Thumbnails.FirstOrDefault();
            <div class="col-12 mb-3 col-sm-4 col-md-3 text-center">
                @if (thumbnail != null)
                {
                    <div class="card">
                        <a href="@url" style="text-decoration: none">
                            <img src="@thumbnail.Url"
                                 alt="@thumbnail.AltText"
                                 referrerpolicy="no-referrer"
                                 class="feed-image" />
                        </a>
                    </div>
                }
                @if (item is Post post && post.Type == PostType.StatusUpdate)
                {
                    <div class="post-body">
                        @Html.Raw(post.Html)
                    </div>
                }
                else
                {
                    <label style="max-width: 100%; max-height: 3rem; overflow: hidden">
                        @if (item is IInboxPost inboxPost && inboxPost.DismissedAt == null)
                        {
                            <input form="dismissForm" type="checkbox" name="id" class="inboxItemCheckbox" value="@item.Id" />
                        }
                        <a href="@url">@item.DisplayTitle</a>
                    </label>
                }
            </div>
        }
    </div>
</div>

@foreach (var item in withoutThumbnails)
{
    string url = User.Identity?.IsAuthenticated == true
        ? item.InternalUrl
        : item.ExternalUrl;

    <div class="mb-3">
        @if (item is Post myPost)
        {
            <div class="small text-muted">
                @(myPost.Type == PostType.JournalEntry ? "✏️ journal entry"
                    : myPost.Type == PostType.StatusUpdate ? "💬 status update"
                    : myPost.Type == PostType.Artwork ? "🖌 artwork"
                    : myPost.Type == PostType.Scraps ? "✎ scraps"
                    : "")
            </div>
        }
        else if (item is AddressedPost addressedPost)
        {
            foreach (var id in addressedPost.Addressing.To)
            {
                <div class="small text-muted">
                    To: @id
                </div>
            }
            foreach (var id in addressedPost.Addressing.Cc)
            {
                <div class="small text-muted">
                    CC: @id
                </div>
            }
        }

        @if (item is Post post && post.Type == PostType.StatusUpdate)
        {
            <div class="post-body">
                @Html.Raw(post.Html)
            </div>
        }
        else
        {
            <label>
                @if (item is IInboxPost inboxPost && inboxPost.DismissedAt == null)
                {
                    <input form="dismissForm" type="checkbox" name="id" class="inboxItemCheckbox" value="@item.Id" />
                }
                @item.DisplayTitle
            </label>
        }

        <div class="small">
            <a href="@url">
                @item.PostedAt.UtcDateTime.ToLongDateString()
            </a>
        </div>

        @if (item is RssFeedItem feedItem && feedItem.Enclosures.Any())
        {
            <div class="mt-3">
                <a class="btn btn-outline-primary btn-sm" asp-controller="Podcast" asp-action="Player" asp-route-id="@feedItem.Id" target="_blank" onclick="event.preventDefault(); window.open(event.target.href, '_blank', 'popup=true,width=600,height=300')">
                    Play in new window
                </a>
                @foreach (var enclosure in feedItem.Enclosures)
                {
                    if (enclosure.MediaType == "audio/mpeg")
                    {
                        <a class="btn btn-outline-secondary btn-sm" href="@enclosure.Url" target="_blank" title="Opens the file in a new window or tab.">
                            Download
                        </a>
                        <a class="btn btn-outline-secondary btn-sm" asp-controller="Podcast" asp-action="SegmentZip" asp-route-url="@enclosure.Url" title="Re-encodes the file as a series of uncompressed .wma files, each no more than 5 minutes in length, to be burned to an audio CD-RW with gapless playback using Windows Media Player Legacy.">
                            ...for CD
                        </a>
                    }
                }
            </div>
        }
    </div>
}
