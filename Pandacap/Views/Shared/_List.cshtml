@using Pandacap.Data
@using Pandacap.HighLevel
@using Pandacap.Models
@model IEnumerable<IPost>

<div class="container-fluid">
    <div class="row">
        @foreach (var item in Model)
        {
            string url = item.LinkUrl;

            if (User.Identity?.IsAuthenticated == true)
            {
                if (item is ActivityPubLike a)
                {
                    url = Url.Action(action: "Index", controller: "RemotePosts", new { id = a.ObjectId })
                        ?? item.LinkUrl;
                }
                else if (item is BlueskyFavorite b)
                {
                    url = Url.Action(action: "ViewBlueskyPost", controller: "ATProto", new { id = b.Id })
                        ?? item.LinkUrl;
                }
            }

            var thumbnails = item.Thumbnails
                .Take(1)
                .DefaultIfEmpty(PostThumbnail.Empty);
            foreach (var thumbnail in thumbnails)
            {
                <div class="col-12 mb-3 col-sm-4 col-md-3 text-center">
                    <div class="card">
                        <a href="@url" style="text-decoration: none">
                            <img src="@thumbnail.Url"
                            alt="@thumbnail.AltText"
                            referrerpolicy="no-referrer"
                            class="feed-image" />
                        </a>
                    </div>

                    <label style="max-width: 100%; height: 3rem; overflow: hidden">
                        <a href="@url">@item.DisplayTitle</a>
                    </label>

                    <div class="mb-2">
                        <img height="25" src="@item.Usericon" alt="" />
                        <a href="@item.ProfileUrl" target="_blank" style="display: inline-block; vertical-align: top">
                            <strong>
                                @item.Username
                            </strong>
                        </a>
                    </div>

                    @foreach (var badge in item.GetBadges())
                    {
                        <span class="badge mb-3" style="background-color: @badge.Background; color: @badge.Color; max-width: 100%; overflow-x: hidden; text-overflow: ellipsis;">
                            @badge.Text
                        </span>
                    }
                </div>
            }
        }
    </div>
</div>