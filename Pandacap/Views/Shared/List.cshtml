@using Pandacap.Data
@using Pandacap.HighLevel
@using Pandacap.Models
@model ListViewModel<IPost>

@{
    ViewBag.Title = Model.Title;
}

@if (Model.AllowDismiss)
{
    <form id="dismissForm" asp-controller="Inbox" asp-action="Dismiss" method="post"></form>
}

@if (!Model.Items.DisplayList.Any())
{
    <p>
        Showing <strong>0</strong> items.
    </p>
}
else
{
    var minDate = Model.Items.DisplayList.Select(item => item.Timestamp).Min().UtcDateTime;
    var maxDate = Model.Items.DisplayList.Select(item => item.Timestamp).Max().UtcDateTime;

    <p>
        Showing
        <strong>@Model.Items.DisplayList.Count()</strong>
        item(s) posted between
        <strong>@minDate.ToLongDateString()</strong> (@minDate.ToShortTimeString())
        and
        <strong>@maxDate.ToLongDateString()</strong> (@maxDate.ToShortTimeString()).
    </p>

    var groups = Model.GroupByUser
        ? Model.Items.DisplayList.GroupBy(item => new { item.Username, item.Usericon })
        : Model.Items.DisplayList.GroupBy(item => new { Username = (string?)null, Usericon = (string?)null });

    foreach (var group in groups)
    {
        if (group.Key.Username != null)
        {
            <h1>
                <img height="50" src="@(group.Key.Usericon ?? "/images/trgray.svg")" alt="" />
                <span style="display: inline-block; vertical-align: top">
                    <strong>
                        @group.Key.Username
                    </strong>
                </span>
            </h1>
        }

        <div class="container-fluid">
            <div class="row">
                @foreach (var item in group)
                {
                    var thumbs = Model.ShowThumbnails
                        ? item.Thumbnails.DefaultIfEmpty(null)
                        : [null];
                    @foreach (var thumb in thumbs)
                    {
                        <div class="col-12 mb-3 @(Model.ShowThumbnails ? "col-sm-4 col-md-3 text-center" : "")">
                            @if (Model.ShowThumbnails)
                            {
                                <a href="@item.LinkUrl" aria-hidden="true">
                                    <img src="@(thumb?.GetThumbnailSrc() ?? "/images/trgray.svg")"
                                         srcset="@thumb?.GetThumbnailSrcset()"
                                         alt=""
                                         referrerpolicy="no-referrer"
                                         class="feed-image" />
                                </a>
                            }
                            <label>
                                @if (Model.AllowDismiss)
                                {
                                    <input form="dismissForm" type="checkbox" name="id" class="inboxItemCheckbox" value="@item.Id" />
                                }
                                <a href="@item.LinkUrl">@item.DisplayTitle</a>
                                @if (item is UserPost)
                                {
                                    <br />
                                    <span class="text-muted">(@item.Timestamp.UtcDateTime.ToLongDateString())</span>
                                }
                            </label>
                            @if (item is RemoteActivityPubPost remote)
                            {
                                <div class="mt-3">
                                    <form asp-controller="Favorites" asp-action="Add">
                                        <input type="hidden" name="id" value="@remote.Id" />
                                        <button class="btn btn-outline-primary">Add to Favorites</button>
                                    </form>
                                </div>
                            }
                            @if (item is RemoteActivityPubAnnouncement announcement)
                            {
                                <div class="mt-3">
                                    <form asp-controller="Favorites" asp-action="Add">
                                        <input type="hidden" name="id" value="@announcement.ObjectId" />
                                        <button class="btn btn-outline-primary">Add to Favorites</button>
                                    </form>
                                </div>
                            }
                            @if (User.Identity?.IsAuthenticated == true && item is RemoteActivityPubFavorite activityPubFavorite)
                            {
                                <div class="mt-3">
                                    <form asp-controller="Favorites" asp-action="Remove" onsubmit="confirm('Are you sure you want to remove this post from your favorites?')">
                                        <input type="hidden" name="id" value="@activityPubFavorite.LikeGuid" />
                                        <button class="btn btn-outline-primary">Remove from Favorites</button>
                                    </form>
                                </div>
                            }
                        </div>
                    }
                }
            </div>
        </div>
    }

    @if (Model.AllowDismiss)
    {
        <hr />

        <button type="button" id="selectAll" class="btn btn-secondary">
            Select / deselect all
        </button>

        <button form="dismissForm" type="submit" class="btn btn-secondary">
            Remove selected items from inbox
        </button>
    }

    @if (Microsoft.FSharp.Core.OptionModule.ToObj(Model.Items.Next) is IPost nextPost)
    {
        <hr />

        <a asp-route-q="@Model.Q"
           asp-route-next="@nextPost.Id"
           asp-route-count="@Model.Items.DisplayList.Length"
           class="btn btn-primary">
            Next @Model.Items.DisplayList.Length items &raquo;
        </a>
    }
}

<script type="text/javascript">
    document.getElementById("selectAll").addEventListener("click", e => {
        e.preventDefault();

        const checkboxes = document.getElementsByClassName("inboxItemCheckbox");
        let anyUnchecked = false;
        for (let i = 0; i < checkboxes.length; i++) {
            if (!checkboxes[i].checked) {
                anyUnchecked = true;
                break;
            }
        }
        for (let i = 0; i < checkboxes.length; i++) {
            checkboxes[i].checked = anyUnchecked ? true : false;
        }
    });
</script>

<style type="text/css">
    img.feed-image {
        height: 150px;
    }

    @@supports (object-fit: contain) {
        img.feed-image {
            width: 100%;
            object-fit: contain;
        }
    }
</style>
