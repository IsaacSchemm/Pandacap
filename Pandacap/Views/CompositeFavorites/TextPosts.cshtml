@using Pandacap.Data
@using Pandacap.HighLevel
@using Pandacap.Models
@model ListViewModel

@{
    ViewBag.Title = Model.Title;
}

<ul class="nav nav-tabs mb-3">
    <li class="nav-item">
        <a class="nav-link" asp-action="Artwork">Artwork</a>
    </li>
    <li class="nav-item">
        <a class="nav-link active" aria-current="page" href="#">Text Posts</a>
    </li>
</ul>

@if (!Model.Items.Current.Any())
{
    <p>
        Showing <strong>0</strong> items.
    </p>
}
else
{
    var minDate = Model.Items.Current.Select(item => item.Timestamp).Min().UtcDateTime;
    var maxDate = Model.Items.Current.Select(item => item.Timestamp).Max().UtcDateTime;

    <p>
        Showing
        <strong>@Model.Items.Current.Count()</strong>
        item(s) posted between
        <strong>@minDate.ToLongDateString()</strong> (@minDate.ToShortTimeString())
        and
        <strong>@maxDate.ToLongDateString()</strong> (@maxDate.ToShortTimeString()).
    </p>

    <div class="container-fluid">
        <div class="row">
            @foreach (var item in Model.Items.Current)
            {
                var thumbnails = item.Thumbnails
                    .Take(1)
                    .DefaultIfEmpty(PostThumbnail.Empty);
                foreach (var thumbnail in thumbnails)
                {
                    <div class="col-12 mb-3">
                        <div class="mb-2">
                            <img height="25" src="@item.Usericon" alt="" />

                            <a href="@item.ProfileUrl"><strong>@item.Username</strong></a>

                            @foreach (var badge in item.Badges)
                            {
                                <span class="badge" style="background-color: @badge.Background; color: @badge.Color; vertical-align: middle">
                                    @badge.Text
                                </span>
                            }
                        </div>

                        <div class="card">
                            <div class="card-body">
                                @item.DisplayTitle
                            </div>
                        </div>

                        @if (User.Identity?.IsAuthenticated == true)
                        {
                            <form asp-action="Remove" onsubmit="return confirm('Are you sure you want to remove this post from Favorites? (Pandacap may or may not re-add it if it is still in your Favorites page on the upstream platform.')">
                                <input type="hidden" name="id" value="@item.Id" />
                                <button type="submit" class="btn btn-sm btn-primary">
                                    Remove
                                </button>
                            </form>
                        }
                    </div>
                }
            }
        </div>
    </div>

    @if (Model.Items.Next is string id)
    {
        <hr />

        <a asp-route-q="@Model.Q"
           asp-route-next="@id"
           asp-route-count="@Model.Items.Current.Count"
           class="btn btn-primary">
            Next @Model.Items.Current.Count items &raquo;
        </a>
    }
}
