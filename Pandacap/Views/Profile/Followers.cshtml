@using Pandacap.Data
@using Pandacap.HighLevel
@using Pandacap.Models
@model ListViewModel<Follower>

@{
    ViewBag.Title = Model.Title;
}

@if (!Model.Items.DisplayList.Any())
{
    <p>
        There are no other ActivityPub users who follow this user.
    </p>
}
else
{
    @foreach (var item in Model.Items.DisplayList)
    {
        <div class="mb-3">
            <div>
                <img height="50" src="@item.IconUrl" alt="" />
                <span style="display: inline-block; vertical-align: top">
                    <strong>
                        @(item.PreferredUsername ?? item.ActorId)
                    </strong>
                    <br />
                    <a href="@item.ActorId">@item.ActorId</a>
                    @if (item.Pending)
                    {
                        @:(pending)
                    }
                </span>
            </div>

            @if (User.Identity?.IsAuthenticated == true)
            {
                @if (item.GhostedSince != null)
                {
                    <form asp-action="Unghost" class="mt-3">
                        <input type="hidden" name="id" value="@item.ActorId" />
                        <button type="submit" class="btn btn-primary btn-sm">Unghost @(item.PreferredUsername ?? item.ActorId) (resume sending "Create" activities)</button>
                    </form>
                }
                else if (item.ActorId == "bsky.brid.gy")
                {
                    <form asp-action="Ghost" class="mt-3">
                        <input type="hidden" name="id" value="@item.ActorId" />
                        <button type="submit" class="btn btn-secondary btn-sm">Ghost @(item.PreferredUsername ?? item.ActorId) (stop sending "Create" activities)</button>
                    </form>
                    <div class="small text-muted">
                        This stops new posts from showing up on the bridged account without needing to block Bridgy Fed outright.
                    </div>
                }
            }
        </div>
    }

    @if (Microsoft.FSharp.Core.OptionModule.ToObj(Model.Items.Next) is IRemoteActorRelationship nextActor)
    {
        <hr />

        <a asp-route-q="@Model.Q"
           asp-route-next="@nextActor.ActorId"
           asp-route-count="@Model.Items.DisplayList.Length"
           class="btn btn-outline-primary">
            Next @Model.Items.DisplayList.Length items &raquo;
        </a>
    }
}
